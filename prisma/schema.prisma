generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type AnswersAnswer {
  id    String @map("_id")
  value String
}

type AssignmentmoderationsModerationEntries {
  id            String   @map("_id") @db.ObjectId
  answer        String   @db.ObjectId
  date          DateTime @db.Date
  lecturer      String   @db.ObjectId
  moderatedMark Int
  question      String   @db.ObjectId
}

type AttendancesAttendees {
  id            String @map("_id") @db.ObjectId
  status        String
  student       String @db.ObjectId
  /// Could not determine type: the field only had null or empty values in the sample set.
  timeCheckedIn Json?
}

type FinancesCollectedFees {
  id              String    @map("_id") @db.ObjectId
  balance         String
  /// Multiple data types found: Float: 1.4%, Int: 98.6% out of 8855 sampled entries
  credit          Json?
  /// Multiple data types found: Float: 0.6%, Int: 99.4% out of 8855 sampled entries
  debit           Json?
  description     String
  transactionDate DateTime? @db.Date
}

type FinancesPayableFees {
  id      String    @map("_id") @db.ObjectId
  /// Multiple data types found: Float: 1.1%, Int: 98.9% out of 660 sampled entries
  amount  Json
  /// Multiple data types found: Float: 0.6%, Int: 99.4% out of 660 sampled entries
  arrears Json
  dueDate DateTime? @db.Date
}

type QuestionsCorrectAnswer {
  columnA String
  columnB String
}

type QuestionsOptions {
  id      String  @map("_id") @db.ObjectId
  columnA String?
  columnB String?
  value   String?
}

type ResultsResults {
  id             String @map("_id") @db.ObjectId
  /// Multiple data types found: Float: 12.8%, Int: 87.2% out of 9009 sampled entries
  average        Json?
  overallOutcome String
  /// Multiple data types found: Float: 12.2%, Int: 87.8% out of 9460 sampled entries
  score          Json?
  student        String @db.ObjectId
  /// Multiple data types found: Float: 1%, Int: 99% out of 9347 sampled entries
  taskScore      Json?
  /// Multiple data types found: Float: 1.4%, Int: 98.6% out of 9347 sampled entries
  testScore      Json?
}

type RolesPermissions {
  id      String                  @map("_id") @db.ObjectId
  actions RolesPermissionsActions
  page    String
}

type RolesPermissionsActions {
  edit   Boolean
  upload Boolean
  view   Boolean
}

type StaffsProfile {
  address          StaffsProfileAddress?
  dateOfBirth      String?
  designation      String?
  emergencyContact String?
  employeeId       String?
  firstName        String
  gender           String?
  idNumber         String?
  lastName         String?
  maritalStatus    String?
  mobileNumber     String?
  postalAddress    StaffsProfilePostalAddress?
  /// Could not determine type: the field only had null or empty values in the sample set.
  qualification    Json?
  /// Could not determine type: the field only had null or empty values in the sample set.
  workExperience   Json?
}

type StaffsProfileAddress {
  street1 String
}

type StaffsProfilePostalAddress {
  street1 String
}

type StaffsUserPermissions {
  id          String                           @map("_id") @db.ObjectId
  page        String
  permissions StaffsUserPermissionsPermissions
}

type StaffsUserPermissionsPermissions {
  edit   Boolean
  upload Boolean
  view   Boolean
}

type StudentsProfile {
  address            StudentsProfileAddress
  admissionDate      String
  avatar             String?
  cityAndGuildNumber String
  dateOfBirth        String
  firstName          String
  gender             String
  homeLanguage       String
  idNumber           String
  lastName           String
  middleName         String
  mobileNumber       String
  postalAddress      StudentsProfilePostalAddress
  
}

type StudentsProfileAddress {
  city       String
  country    String
  postalCode String
  province   String
  street1    String
  street2    String
}

type StudentsProfilePostalAddress {
  city       String
  country    String
  postalCode String
  province   String
  street1    String
  street2    String
}

type StudentwelrecordsWelRecords {
  id                   String   @map("_id") @db.ObjectId
  endDate              DateTime @db.Date
  establishmentContact String
  establishmentName    String
  evaluated            Boolean
  startDate            DateTime @db.Date
  totalHours           Int
}

type SubscriptionsSubscription {
  endpoint String
  keys     SubscriptionsSubscriptionKeys
}

type SubscriptionsSubscriptionKeys {
  auth   String
  p256dh String
}

model accommodations {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  v                 Int      @map("__v")
  address           String
  costPerBed        Int
  numberOfOccupants Int
  occupantType      String
  occupants         String[]
  roomNumber        String
  roomType          String
}

model answers {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  v               Int      @map("__v")
  /// Multiple data types found: String: 92.6%, AnswersAnswer: 7.4% out of 1000 sampled entries
  answer          Json
  answeredAt      DateTime @db.Date
  assignment      String   @db.ObjectId
  /// Could not determine type: the field only had null or empty values in the sample set.
  matchAnswers    Json?
  moderatedscores Int?
  question        String   @db.ObjectId
  scores          Int?
  student         String   @db.ObjectId

  @@index([assignment, question, student], map: "assignment_1_question_1_student_1_autocreated")
}

model assignmentmoderations {
  id                String                                   @id @default(auto()) @map("_id") @db.ObjectId
  v                 Int                                      @map("__v")
  assignment        String                                   @db.ObjectId
  assignmentResult  String                                   @db.ObjectId
  createdAt         DateTime                                 @db.Date
  moderatedBy       String                                   @db.ObjectId
  moderationEntries AssignmentmoderationsModerationEntries[]
  updatedAt         DateTime                                 @db.Date
}

model assignmentresults {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  v               Int      @map("__v")
  answers         String[]
  assignment      String   @db.ObjectId
  campus          String   @db.ObjectId
  dateTaken       DateTime @db.Date
  feedback        Json?
  intakeGroup     String   @db.ObjectId
  markedBy        String?  @db.ObjectId
  moderatedscores String?
  outcome         String   @db.ObjectId
  percent         Int?     // Overall percentage
  testScore      Int?     // Added field for test score
  taskScore      Int?     // Added field for task score
  scores          Int?     // Keep this as average of test and task
  status          String
  student         String   @db.ObjectId
}

model assignments {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  v                  Int      @map("__v")
  availableFrom      DateTime @db.Date
  /// Could not determine type: the field only had null or empty values in the sample set.
  availableUntil     Json?
  campus             String[]
  createdAt          DateTime @db.Date
  duration           Int
  individualStudents String[]
  intakeGroups       String[]
  lecturer           String   @db.ObjectId
  outcome            String[]
  password           String
  questions          String[]
  title              String
  type               String
  updatedAt          DateTime @db.Date
}

model attendances {
  id             String                 @id @default(auto()) @map("_id") @db.ObjectId
  v              Int                    @map("__v")
  attendanceDate DateTime               @db.Date
  attendees      AttendancesAttendees[]
  campus         String                 @db.ObjectId
  intakeGroup    String                 @db.ObjectId
  type           String?
}

model campus {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  v     Int    @map("__v")
  title String
}

model events {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  details        String    @default("")
  startDate      DateTime
  endDate        DateTime?
  color          String    @default("other")  // Add default value
  location       String[]  @default([])
  assignedTo     String[]  @default([])
  assignedToModel String[] @default([])
  createdBy      String    @db.ObjectId
  v              Int       @default(1)
  allDay         Boolean   @default(false)
}

model finances {
  id            String                  @id @default(auto()) @map("_id") @db.ObjectId
  v             Int                     @map("__v")
  collectedFees FinancesCollectedFees[]
  payableFees   FinancesPayableFees[]
  student       String                  @db.ObjectId
}

model generaldocuments {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  v           Int       @map("__v")
  description String
  documentUrl String
  student     String    @db.ObjectId
  title       String
  uploadDate  DateTime? @db.Date
}

model guardians {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  v                Int?      @map("__v") // Nullable
  createdAt        DateTime? @db.Date
  email            String?   // Nullable
  firstName        String?   // Nullable
  lastName         String?   // Nullable
  mobileNumber     String?   // Nullable
  password         String?   // Nullable
  relation         String?   // Nullable
  resetToken       String?   // Nullable
  resetTokenExpiry DateTime? @db.Date
  updatedAt        DateTime? @db.Date
  userType         String?   // Nullable
}


model intakegroups {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  v       Int      @map("__v")
  campus  String[]
  outcome String[]
  title   String
}

model learningmaterials {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  v            Int      @map("__v")
  dateUploaded DateTime @db.Date
  description  String
  filePath     String
  intakeGroup  String[]
  title        String
  uploadType   String
}

model legaldocuments {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  v           Int       @map("__v")
  description String
  documentUrl String
  student     String    @db.ObjectId
  title       String
  uploadDate  DateTime? @db.Date
}

model newsessions {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @db.Date
  expiresAt   DateTime @db.Date
  ip          String
  permissions String[]
  roles       String[]
  token       String
  userAgent   String
  userId      String   @db.ObjectId
  userType    String
}

model notifications {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  createdAt DateTime @db.Date
  isRead    Boolean
  message   String
  title     String
  type      String
  userId    String   @db.ObjectId
  userType  String
}

model outcomes {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  v      Int      @map("__v")
  campus String[]
  hidden Boolean?
  title  String
  type   String
}

model qrs {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  v              Int      @map("__v")
  attendanceDate DateTime @db.Date
  campus         String
  intakeGroup    String[]
  qrcode         String
  type           String
}

model qualifications {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  v     Int    @map("__v")
  title String
}

model questions {
  id            String             @id @default(auto()) @map("_id") @db.ObjectId
  v             Int                @map("__v")
  /// Multiple data types found: String: 47.1%, Array(String): 52.8%, Array(QuestionsCorrectAnswer): 0.1% out of 1000 sampled entries
  correctAnswer Json
  mark          String
  options       QuestionsOptions[]
  text          String
  type          String
}

model results {
  id           String           @id @default(auto()) @map("_id") @db.ObjectId
  v            Int              @map("__v")
  campus       String           @db.ObjectId
  conductedOn  DateTime         @db.Date
  details      String
  intakeGroups String           @db.ObjectId
  observer     String
  outcome      String           @db.ObjectId
  participants String[]
  resultType   String
  results      ResultsResults[]
  title        String
}

model roles {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  v           Int                @map("__v")
  createdAt   DateTime           @db.Date
  description String
  permissions RolesPermissions[]
  roleName    String             @unique(map: "roleName_1")
  updatedAt   DateTime           @db.Date
}

model staffs {
  id                    String                  @id @default(auto()) @map("_id") @db.ObjectId
  v                     Int                     @map("__v")
  active                Boolean
  agreementAccepted     Boolean
  agreementAcceptedDate DateTime?               @db.Date
  createdAt             DateTime                @db.Date
  email                 String                  @unique(map: "email_1")
  mustChangePassword    Boolean
  password              String
  profile               StaffsProfile
  refreshToken          String?
  resetToken            String?
  resetTokenExpiry      DateTime?               @db.Date
  roles                 String[]
  updatedAt             DateTime                @db.Date
  userPermissions       StaffsUserPermissions[]
  userType              String
  username              String                  @unique(map: "username_1")
}

model students {
  id                    String          @id @default(auto()) @map("_id") @db.ObjectId
  v                     Int             @map("__v")
  active                Boolean
  avatarUrl             String?
  admissionNumber       String          @unique(map: "admissionNumber_1")
  agreementAccepted     Boolean
  agreementAcceptedDate DateTime?       @db.Date
  alumni                Boolean?

  assignments           Json?
  campus                String[]
  createdAt             DateTime?       @db.Date
  currentResult         String?
  email                 String          @unique(map: "email_1")
  guardians             String[]
  importantInformation  String?
  inactiveReason        String?
  intakeGroup           String[]
  mustChangePassword    Boolean
  /// Could not determine type: the field only had null or empty values in the sample set.
  outcome               Json?
  password              String
  profile               StudentsProfile
  qualification         String[]
  refreshToken          String?
  resetToken            String?
  resetTokenExpiry      DateTime?       @db.Date
  updatedAt             DateTime        @db.Date
  userType              String
  username              String          @unique(map: "username_1")
}

model studentwelrecords {
  id         String                        @id @default(auto()) @map("_id") @db.ObjectId
  v          Int                           @map("__v")
  createdAt  DateTime                      @db.Date
  student    String                        @db.ObjectId
  updatedAt  DateTime                      @db.Date
  welRecords StudentwelrecordsWelRecords[]
}

model subscriptions {
  id           String                    @id @default(auto()) @map("_id") @db.ObjectId
  v            Int                       @map("__v")
  subscription SubscriptionsSubscription
  userId       String                    @db.ObjectId
  userType     String
}

model welattendances {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model wels {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  v             Int      @map("__v")
  accommodation Boolean
  available     Boolean
  dateUploaded  DateTime @db.Date
  description   String?
  location      String
  note          String?
  photoPath     String[]
  title         String
}
